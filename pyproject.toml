[project]
name="djangocms-style"
dynamic = ["version"]
description="Adds style plugin to django CMS"
readme="README.rst"
license={text="BSD-3-Clause"}
authors=[
  {name="Divio AG", email="info@divio.ch"},
]
maintainers=[
  {name="Django CMS Association and contributors", email="info@django-cms.org"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django CMS",
    "Framework :: Django CMS :: 3.7",
    "Framework :: Django CMS :: 3.8",
    "Framework :: Django CMS :: 3.9",
    "Framework :: Django CMS :: 3.10",
    "Framework :: Django CMS :: 3.11",
    "Framework :: Django CMS :: 4.1",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "django-cms>=3.7",
    "djangocms-attributes-field>=1",
]

[project.urls]
repository = "https://github.com/django-cms/djangocms-style"

[tool.setuptools.dynamic]
version = {attr = "djangocms_style.__version__"}

[tool.codespell]
skip = '*.po'

[tool.ruff]
line-length = 119
lint.select = [
  "E",    # pycodestyle errors
  "W",    # pycodestyle warnings
  "F",    # pyflakes
  "I",    # isort
  "FBT",  # flake8-boolean-trap
  "B",    # flake8-bugbear
  "C",    # flake8-comprehensions
  "DJ",   # flake8-django
  "INT",  # flake8-gettext
  "PIE",  # flake8-pie
  "Q",    # flake8-quotes
  "SIM",  # flake8-simplify
  "PGH",  # pygrep-hooks
  "PLE",  # pylint error
  "PLR",  # pylint refactor
  "PLW",  # pylint warning
  "UP",   # pyupgrade
  "C901", # mccabe
  "N",    # pep8-naming
  "YTT",  # flake8-2020
  "RUF"
]
lint.exclude = [
    ".env",
    ".venv",
    "**/migrations/**",
]
lint.ignore = [
    "E501",  # line too long
    "F403",  # 'from module import *' used; unable to detect undefined names
    "E701",  # multiple statements on one line (colon)
    "F401",  # module imported but unused
]
[tool.ruff.lint.per-file-ignores]
"conftest.py" = [
  "N806",  # expects variable name in lowercase
]
